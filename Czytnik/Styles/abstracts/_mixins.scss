@mixin blob_decoration($h-value, $v-value, $h-side: left, $v-side: top, $width: 38rem, $rotate: 0deg) {
  &::after {
    position: absolute;
    #{$h-side}: $h-value;
    #{$v-side}: $v-value;

    z-index: -20;

    content: '';
    width: $width;
    height: $width;

    background-image: url('../assets/svg/blob.svg');
    background-repeat: no-repeat;
    background-size: contain;

    transform: rotate($rotate);

    @media screen and(max-width: 900px) {
      display: none;
    }
  }
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin center-flex {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin change-input-placeholder-color($color) {
  &::placeholder {
    color: $color;
    opacity: 1;
  }

  &:-ms-input-placeholder {
    color: $color;
  }

  &::-ms-input-placeholder {
    color: $color;
  }
}

@mixin lineClamp($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;  
  overflow: hidden;
}

//* MEDIA QUERY MANAGER
/*
* 0 - 600px:      Phone
* 600 - 900px:    Tablet portrait
* 900 - 1200px:   Tablet landscape
* [1200 - 1800]   Normal style
* 1800px +:       Big desktop

* $breakpoint argument choices:
* - phone
* - tab-port
* - tab-land
* - big-desktop

* ORDER: Base + Typography > General Layout + Grid > Page Layout > Components

* 1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    //* 600px
    @media only screen and (max-width: 37.5em) {
      @content;
    }
  }
  @if $breakpoint == tab-port {
    //* 900px
    @media only screen and (max-width: 56.25em) {
      @content;
    }
  }
  @if $breakpoint == tab-land {
    //* 1200px
    @media only screen and (max-width: 75em) {
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    //* 1800px
    @media only screen and (min-width: 112.5em) {
      @content;
    }
  }
}
